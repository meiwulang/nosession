<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjh.mall.bizapi.biz.goods.middle.dao.ActivityGoodDao" >
  <sql id="tableName" >
    activity_good
  </sql>
  <resultMap id="BaseResultMap" type="com.hjh.mall.bizapi.biz.goods.middle.entity.ActivityGood" >
	<constructor>
		<idArg javaType="String" column="act_good_id"/>
		<arg javaType="String" column="good_id"/>
		<arg javaType="String" column="activity_id"/>
	</constructor>
    <id column="act_good_id" property="actGoodId" jdbcType="VARCHAR" />
    <result column="good_id" property="goodId" jdbcType="VARCHAR" />
    <result column="activity_id" property="activityId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="fullColumns" >
    act_good_id, good_id, activity_id
  </sql>
  <sql id="fullColumnsValues" >
    #{actGoodId}, #{goodId}, #{activityId}
  </sql>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="fullColumns" />
    from activity_good
    where act_good_id = #{actGoodId}
  </select>
  <select id="getActivitysGoodsId" resultType="String" parameterType="java.lang.String" >
    select 
    good_id
    from activity_good
    where activity_id = #{actGoodId}
  </select>
  <select id="getPrdtList" resultType="map"  parameterType="java.lang.String">
	SELECT
		g.goods_id AS goods_id,
		g.show_url AS show_url,
		g.goods_name AS goods_name
	FROM
		activity_good AS ag,
		goods AS g
	WHERE
		ag.activity_id =#{activityId}
	AND
		ag.good_id = g.goods_id
	AND g.goods_status = '1'
  </select>
  <delete id="delete" parameterType="java.lang.String" >
    delete from activity_good
    where act_good_id = #{actGoodId}
  </delete>
  <delete id="batchDelByActivityIdAndGoodID"  >
    delete from activity_good
    where activity_id=#{activityId} and good_id in (
   <foreach item="t" collection="ids" separator=",">
		#{t}
	</foreach>
	)
  </delete>
  <delete id="batchDelBygoodId"  >
    delete from activity_good
    where good_id in (
   <foreach item="t" collection="list" separator=",">
		#{t}
	</foreach>
	)
  </delete>
  <update id="update" parameterType="com.hjh.mall.bizapi.biz.goods.middle.entity.ActivityGood" >
    update activity_good
    <set >
      <if test="goodId != null" >
        good_id = #{goodId},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId},
      </if>
    </set>
    where act_good_id = #{actGoodId}
  </update>
  <sql id="fullWhere" >
    <where >
      <if test="actGoodId != null" >
         and act_good_id = #{actGoodId}
      </if>
      <if test="goodId != null" >
         and good_id = #{goodId}
      </if>
      <if test="activityId != null" >
         and activity_id = #{activityId}
      </if>
    </where>
  </sql>
  <sql id="likeWhere" >
    <where >
      <if test="actGoodId != null" >
         and act_good_id like '%${actGoodId}%'
      </if>
      <if test="goodId != null" >
         and good_id like '%${goodId}%'
      </if>
      <if test="activityId != null" >
         and activity_id like '%${activityId}%'
      </if>
    </where>
  </sql>
  <select id="query" resultMap="BaseResultMap" >
    select <include refid="fullColumns"/> from 
	<include refid="tableName"/> 
	<include refid="fullWhere"/> 
	<include refid="sortAndPage"></include>
  </select>
  <sql id="sortAndPage" >
    <if test="null != sortMarkers"> order by 
		<foreach collection="sortMarkers" item="sortMarker" separator=","> 
			${sortMarker.field} ${sortMarker.direction} 
		</foreach> 
	</if> 
	<if test="null != page"> 
		limit #{page.offset}, #{page.page_size} 
	</if>
  </sql>
  <select id="countByLike" resultType="int" >
    select count(1) from
	<include refid="tableName"/>
	<include refid="likeWhere"></include>
  </select>
  <select id="count" resultType="int" >
    select count(1) from
	<include refid="tableName"/>
	<include refid="fullWhere"></include>
  </select>
  <select id="queryByLike" resultType="map" >
    select <include refid="fullColumns" /> from
	<include refid="tableName"/>
	<include refid="likeWhere"></include>
	<include refid="sortAndPage"></include>
  </select>
  <insert id="save" useGeneratedKeys="true" >
    insert into <include refid="tableName"/>
	( <include refid="fullColumns"></include> )
	values( <include refid="fullColumnsValues"></include> )
  </insert>
  <insert id="batchSave" useGeneratedKeys="true" >
    insert into <include refid="tableName"/>
	( <include refid="fullColumns"></include> )
	values 
	<foreach item="t" collection="list" separator=",">
	(#{t.actGoodId},#{t.goodId},#{t.activityId})
	</foreach>
    
  </insert>
    	<select id="queryGoods" resultType="map">
		select
		goods_id,brand_name,goods_name,banner_ids,detail_ids,info_ids,standard_ids,tel,goods_status,ad_url,update_date,update_time,
		update_user,init_date,init_time,sort,brand_id,update_user_name,unit_id,unit_name,show_url,
		first_category_id,first_category_name,second_category_id,second_category_name,third_category_id,third_category_name,create_user_id,create_user_name,
		adapt_all_models,pay_type,font_money_rate
		from goods
		<include refid="queryGoodsWhere"></include>
		<include refid="sortAndPage"></include>
	</select>

	<select id="countQueryGoods" resultType="int">
		select count(1)
		from goods
		<include refid="queryGoodsWhere"></include>
		<include refid="sortAndPage"></include>
	</select>
	<sql id="queryGoodsWhere">
		<where>
			<if test="goods_id !=null">
				AND goods_id=#{goods_id}
			</if>
			<if test="category_id !=null">
				AND category_id=#{category_id}
			</if>
			<if test="brand_name !=null">
				AND brand_name=#{brand_name}
			</if>
			<if test="factory_detail !=null">
				AND factory_detail=#{factory_detail}
			</if>
			<if test="goods_name !=null">
				AND goods_name like concat('%',#{goods_name},'%')
			</if>
			<if test="price_area !=null">
				AND price_area=#{price_area}
			</if>
			<if test="banner_ids !=null">
				AND banner_ids=#{banner_ids}
			</if>
			<if test="detail_ids !=null">
				AND detail_ids=#{detail_ids}
			</if>
			<if test="info_ids !=null">
				AND info_ids=#{info_ids}
			</if>
			<if test="standard_ids !=null">
				AND standard_ids=#{standard_ids}
			</if>
			<if test="tel !=null">
				AND tel=#{tel}
			</if>
			<if test="goods_status !=null">
				AND goods_status=#{goods_status}
			</if>
			<if test="ad_url !=null">
				AND ad_url=#{ad_url}
			</if>
			<if test="update_user != null">
				AND update_user = #{update_user}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="init_date != null">
				AND init_date = #{init_date}
			</if>
			<if test="init_time != null">
				AND init_time = #{init_time}
			</if>
			<if test="sort != 0">
				AND sort = #{sort}
			</if>
			<if test="start_date != null">
				AND concat(init_date,init_time) &gt;= #{start_date}
			</if>
			<if test="end_date != null">
				AND concat(init_date,init_time) &lt;= #{end_date}
			</if>
			<if test="brand_id != null">
				AND brand_id = #{brand_id}
			</if>
			<if test="third_category_id != null">
				AND third_category_id = #{third_category_id}
			</if>
			<if test="update_user_name != null">
				AND update_user_name = #{update_user_name}
			</if>
			<if test="unit_id != null">
				AND unit_id = #{unit_id}
			</if>
			<if test="show_url != null">
				AND show_url = #{show_url}
			</if>
			<if test="first_category_id != null">
				AND first_category_id = #{first_category_id}
			</if>
			<if test="first_category_name != null">
				AND first_category_name = #{first_category_name}
			</if>
			<if test="second_category_id != null">
				AND second_category_id = #{second_category_id}
			</if>
			<if test="second_category_name != null">
				AND second_category_name = #{second_category_name}
			</if>
			<if test="third_category_name != null">
				AND third_category_name=#{third_category_name}
			</if>
			<if test="create_user_id != null">
				AND create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				AND create_user_name=#{create_user_name}
			</if>
			<if test="unit_name != null">
				AND unit_name = #{unit_name}
			</if>
			<if test="min_price != null">
				AND min_price = #{min_price}
			</if>
			<if test="sale_num != null">
				AND sale_num = #{sale_num}
			</if>
			<if test="adapt_all_models != null">
				AND adapt_all_models = #{adapt_all_models}
			</if>
			<if test="ids != null">
				AND goods_id in(
				<foreach collection="ids" item="item" index="index"
					separator=",">
					#{item}
				</foreach>
				)
			</if>
			<if test="update_start_date != null">
				AND concat(update_date,update_time) &gt;= #{update_start_date}
			</if>
			<if test="update_end_date != null">
				AND concat(update_date,update_time) &lt;= #{update_end_date}
			</if>
			<if test="addedGoodsids != null">
				AND goods_id not in (<foreach collection="addedGoodsids" item="t" separator=","> #{t}</foreach>)
			</if>
		</where>
	</sql>
</mapper>