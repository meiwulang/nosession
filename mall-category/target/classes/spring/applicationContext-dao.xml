<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	>
	
	<bean id="dbResources" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>classpath:conf/db/db.properties</value>
			</list>
		</constructor-arg>
	</bean>
	<bean id="cacheResources" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>classpath:conf/db/cache.properties</value>
			</list>
		</constructor-arg>
	</bean>
	<bean id="dbPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations" ref="dbResources" />
	</bean>
	<bean id="cachePropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="2" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations" ref="cacheResources" />
	</bean>

	<!--redis缓存配置 暂时不做集群分片处理 二期做修改 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxTotal" value="${maxTotal}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
		<property name="blockWhenExhausted" value="${blockWhenExhausted}"></property>
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.hostname}" />
		<constructor-arg index="2" value="${redis.port}" type="int" />
		<constructor-arg index="3" value="${redis.timeout}"
			type="int" />
	</bean>
	
	<!-- 数据配置 暂时不做数据库分片 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		lazy-init="true" destroy-method="close">
		<property name="driverClass" value="${db.driverClassName}" />
		<property name="jdbcUrl" value="${db.url_1}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="idleConnectionTestPeriod" value="${db.idleConnectionTestPeriod}" />
		<property name="idleMaxAge" value="${db.idleMaxAge}" />
		<property name="maxConnectionsPerPartition" value="${db.maxConnectionsPerPartition}"  />
		<property name="minConnectionsPerPartition" value="${db.minConnectionsPerPartition}" />
		<property name="connectionTimeout" value="${db.connectionTimeout}"></property>
		<property name="partitionCount" value="${db.partitionCount}" />
		<property name="poolAvailabilityThreshold" value="${db.poolAvailabilityThreshold}"></property>
		<property name="acquireIncrement" value="${db.acquireIncrement}" />
		<property name="statementsCacheSize" value="${db.statementsCacheSize}" />
		<property name="releaseHelperThreads" value="${db.releaseHelperThreads}" />
	</bean>
	
<!-- 	<bean id="busiSessionHelper" class="com.hjh.mall.category.util.BusiSessionHelper"> -->
<!-- 	<property name="cacheHelper" ref="cacheHelper"></property> -->
<!-- 	</bean> -->

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocation" value="classpath:mybatis-config.xml" 
			/> -->
		<property name="typeAliasesPackage" value="com.hjh.mall.category.entity" />
		<property name="mapperLocations" value="classpath:sqlmapper/*-sqlmapper.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"  >
		<property name="basePackage" value="com.hjh.mall.category.dao" />
		<property name="markerInterface" value="com.hjh.mall.common.core.dao.base.DAOBase" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>



</beans>